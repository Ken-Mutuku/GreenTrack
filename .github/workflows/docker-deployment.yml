# This section here disables this workflows temporarily till we set up containers:
# azure-static-web-apps-ci-cd.yml
name: "[LEGACY] Azure Static Web Apps CI/CD"  # Renamed
on:
  workflow_dispatch:  # Only runs manually
  push:
    branches: [main]
    paths-ignore:     # Skip if Dockerfiles change
      - '**/Dockerfile'
      - '**/nginx.conf'
      # It ends here
name: Full Stack Docker Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ACR_REGISTRY: yourregistry.azurecr.io  # Replace with your ACR name
  FRONTEND_IMAGE: frontend
  BACKEND_IMAGE: backend

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Frontend Docker build
      - name: Build Frontend Image
        working-directory: ./frontend/GreenTrack
        run: |
          docker build -t $ACR_REGISTRY/$FRONTEND_IMAGE:${{ github.sha }} .

      # Backend Docker build
      - name: Build Backend Image
        working-directory: ./backend
        run: |
          docker build -t $ACR_REGISTRY/$BACKEND_IMAGE:${{ github.sha }} .

      # Azure Login
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Push Images
      - name: Push Frontend Image
        run: docker push $ACR_REGISTRY/$FRONTEND_IMAGE:${{ github.sha }}

      - name: Push Backend Image
        run: docker push $ACR_REGISTRY/$BACKEND_IMAGE:${{ github.sha }}

  deploy_frontend:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_SWA_TOKEN }}
          app_location: "frontend/GreenTrack"
          output_location: "dist"
          docker_image: "${{ env.ACR_REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}"

  deploy_backend:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'greentrack-backend'
          slot-name: 'production'
          images: '${{ env.ACR_REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}